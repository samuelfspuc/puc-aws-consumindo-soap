@model Puc.Aws.Samuel.Web.Models.AddIntegerViewModel
@{
    ViewData["Title"] = "Funcionalidade do Web Service - Add Integer";
}

<h1>@ViewData["Title"]</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        @if (!string.IsNullOrWhiteSpace(ViewBag.MsgErro))
        {
            <div class="alert alert-danger" role="alert">
              @ViewBag.MsgErro
            </div> 
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Arg1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Arg1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Arg1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Arg2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Arg2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Arg2, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (ViewBag.Resultado != null)
        {
            <div class="form-group mt-4">
                <label class="control-label col-md-2">Resultado</label>
                <h2>@ViewBag.Resultado</h2>
            </div>
        }        

        <div class="form-group mt-2">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Calcular" class="btn btn-success" />
                <input type="button" class="btn btn-secondary" value="Limpar" onclick="location.href='@Url.Action("Index", "AddInteger")'" />
            </div>
        </div>
    </div>
}
